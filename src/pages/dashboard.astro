---
// Import any components we'll need
import Layout from '../layouts/Layout.astro';
import '../styles/global.css';
import { getCachedYankeesProspects } from '../utils/mlbData';
import ProspectCharts from '../components/ProspectCharts';
import type { PitchingProspect, HittingProspect } from '../types/baseball';

const prospects = await getCachedYankeesProspects();

// Calculate stats
const stats = {
  totalTop100: prospects.filter(p => p.rank && p.rank <= 100).length,
  averageAge: prospects.reduce((sum, p) => sum + p.age, 0) / prospects.length,
  pitchingStats: {
    averageERA: prospects
      .filter(p => 'era' in p)
      .reduce((sum, p) => sum + (p as PitchingProspect).era, 0) / 
      prospects.filter(p => 'era' in p).length,
    totalStrikeouts: prospects
      .filter(p => 'era' in p)
      .reduce((sum, p) => sum + (p as PitchingProspect).so, 0),
    averageWHIP: prospects
      .filter(p => 'era' in p)
      .reduce((sum, p) => sum + (p as PitchingProspect).whip, 0) / 
      prospects.filter(p => 'era' in p).length,
  },
  hittingStats: {
    averageOPS: prospects
      .filter(p => 'avg' in p)
      .reduce((sum, p) => sum + ((p as HittingProspect).obp + (p as HittingProspect).slg), 0) / 
      prospects.filter(p => 'avg' in p).length,
    totalHR: prospects
      .filter(p => 'avg' in p)
      .reduce((sum, p) => sum + (p as HittingProspect).hr, 0),
    averageAVG: prospects
      .filter(p => 'avg' in p)
      .reduce((sum, p) => sum + (p as HittingProspect).avg, 0) / 
      prospects.filter(p => 'avg' in p).length,
  },
  topPitchers: prospects.filter(p => p.position.includes('P')).slice(0, 10),
  topHitters: prospects.filter(p => !p.position.includes('P')).slice(0, 10),
};

const getLevelNumber = (level: string) => {
  const levels = { 'AAA': 3, 'AA': 2, 'A+': 1, 'A': 0 };
  return levels[level as keyof typeof levels] || 0;
};

const averageLevel = prospects.reduce((sum, p) => sum + getLevelNumber(p.level), 0) / prospects.length;
const levelString = averageLevel > 2 ? 'AAA' : averageLevel > 1 ? 'AA' : 'A+';
---

<Layout title="Yankees Prospects Dashboard">
  <main class="yankees-bg min-h-screen">
    <div class="container mx-auto px-4 py-8">
      <h1 class="text-4xl font-bold mb-8 text-blue-900">Yankees Prospects Dashboard</h1>
      
      <!-- Team Overview Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow-md p-6 dashboard-card">
          <h3 class="text-gray-500 text-sm font-semibold"># Top 100 Prospects</h3>
          <p class="text-3xl font-bold">{stats.totalTop100}</p>
        </div>
        <div class="bg-white rounded-lg shadow-md p-6 dashboard-card">
          <h3 class="text-gray-500 text-sm font-semibold">Average Age of Prospects</h3>
          <p class="text-3xl font-bold">{stats.averageAge.toFixed(1)}</p>
        </div>
        <div class="bg-white rounded-lg shadow-md p-6 dashboard-card">
          <h3 class="text-gray-500 text-sm font-semibold">Average Level of Prospects</h3>
          <p class="text-3xl font-bold">{levelString}</p>
        </div>
        <div class="bg-white rounded-lg shadow-md p-6 dashboard-card">
          <h3 class="text-gray-500 text-sm font-semibold">Total Prospects</h3>
          <p class="text-3xl font-bold">{prospects.length}</p>
        </div>
      </div>

      <!-- Add after the existing cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-xl font-bold mb-4 text-blue-900">Pitching Overview</h3>
          <div class="grid grid-cols-2 gap-4">
            <div>
              <p class="text-gray-500 text-sm">Average ERA</p>
              <p class="text-2xl font-bold">{stats.pitchingStats.averageERA.toFixed(2)}</p>
            </div>
            <div>
              <p class="text-gray-500 text-sm">Total Strikeouts</p>
              <p class="text-2xl font-bold">{stats.pitchingStats.totalStrikeouts}</p>
            </div>
            <div>
              <p class="text-gray-500 text-sm">Average WHIP</p>
              <p class="text-2xl font-bold">{stats.pitchingStats.averageWHIP.toFixed(2)}</p>
            </div>
          </div>
        </div>
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-xl font-bold mb-4 text-blue-900">Hitting Overview</h3>
          <div class="grid grid-cols-2 gap-4">
            <div>
              <p class="text-gray-500 text-sm">Average OPS</p>
              <p class="text-2xl font-bold">{stats.hittingStats.averageOPS.toFixed(3)}</p>
            </div>
            <div>
              <p class="text-gray-500 text-sm">Total Home Runs</p>
              <p class="text-2xl font-bold">{stats.hittingStats.totalHR}</p>
            </div>
            <div>
              <p class="text-gray-500 text-sm">Average AVG</p>
              <p class="text-2xl font-bold">{stats.hittingStats.averageAVG.toFixed(3)}</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Top Pitchers Table -->
      <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-2xl font-bold mb-4 text-blue-900">Top Pitchers</h2>
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead>
              <tr class="bg-gray-50">
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Player</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Level</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ERA</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">IP</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">SO</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">WHIP</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">W</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {stats.topPitchers.map((player) => (
                'era' in player && (
                  <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{player.name}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.level}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.era}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.ip}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.so}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.whip}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.wins}</td>
                  </tr>
                )
              ))}
            </tbody>
          </table>
        </div>
      </div>

      <!-- Top Hitters Table -->
      <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-2xl font-bold mb-4 text-blue-900">Top Hitters</h2>
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead>
              <tr class="bg-gray-50">
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Player</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Level</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">AVG</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">OBP</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">SLG</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">OPS</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">HR</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">RBI</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {stats.topHitters.map((player) => (
                'avg' in player && (
                  <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{player.name}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.level}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.avg}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.obp}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.slg}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{(player.obp + player.slg).toFixed(3)}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.hr}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{player.rbi}</td>
                  </tr>
                )
              ))}
            </tbody>
          </table>
        </div>
      </div>
      <ProspectCharts client:load prospects={prospects} />
    </div>
  </main>
</Layout> 